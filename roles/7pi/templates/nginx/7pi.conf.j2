# {{ansible_managed}}

# HTTPS server
#
server {
    listen       443;
    server_name  7pi.eu;

    ssl                  on;
    ssl_certificate      /etc/pki/tls/certs/7pi.eu/cert.pem;
    ssl_certificate_key  /etc/pki/tls/private/7pi.eu/cert.key;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_ciphers 'EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH EDH+aRSA RC4:HIGH !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS';
    #ssl_ciphers  HIGH:!aNULL:!MD5;

    # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
    # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    # ssl_stapling on;
    # ssl_trusted_certificate /etc/pki/tls/certs/7pi.eu/cert-chain.pem;
    # google resolver?
    # resolver 8.8.8.8;

    access_log /var/log/nginx/access-7pi.log;
    error_log /var/log/nginx/error-7pi.log;

    # main static files
    location / {
        root   /home/pierre/www/7pi.eu/;
        try_files $uri $uri/ /index.html;
    }

    # apis
    location /apis/sso {
             proxy_pass http://{{spi_sso_host}}:{{spi_sso_port}}/;
             proxy_redirect off;

             proxy_set_header Host            $host;
             proxy_set_header X-Real-IP       $remote_addr;
             proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
    }

    location /apis/rssfeeds {
             proxy_pass http://{{spi_rssfeeds_host}}:{{spi_rssfeeds_port}}/;
             proxy_redirect off;

             proxy_set_header Host            $host;
             proxy_set_header X-Real-IP       $remote_addr;
             proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
    }

    location /apis/userfeeds {
             proxy_pass http://{{spi_userfeeds_host}}:{{spi_userfeeds_port}}/;
             proxy_redirect off;

             proxy_set_header Host            $host;
             proxy_set_header X-Real-IP       $remote_addr;
             proxy_set_header X-Forwarder-For $proxy_add_x_forwarded_for;
    }
   
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }
}

# redirect all http traffic to https
server {
    listen 80;
    server_name .7pi.eu;
    rewrite ^ https://$host$request_uri permanent;
}

