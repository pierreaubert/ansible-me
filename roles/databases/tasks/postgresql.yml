---
- name: Postgresql | install server and related packages if on Ubuntu 12.04
  apt: pkg={{ item }} state=installed
  with_items:
    - postgrey
    - postgresql-9.1
    - postgresql-common
    - postgresql-client
    - postgresql-contrib
    - postgresql-plpython-9.1
    - python-psycopg2
    - libpq-dev
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == "precise"
  tags: postgresql

- name: Postgresql | install server and related packages if on Ubuntu 14.04
  apt: pkg={{ item }} state=installed
  with_items:
    - postgrey
    - postgresql-9.3
    - postgresql-common
    - postgresql-client
    - postgresql-contrib
    - postgresql-plpython-9.3
    - python-psycopg2
    - libpq-dev
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == "trusty"
  tags: postgresql

- name: Postgressql | Set admin password
  command: sudo -u postgres psql {{ pg_admin_username }} -c "ALTER USER postgres with password '{{ pg_admin_password }};'"
  tags: postgresql

- name: Postgresql | Add adminpack extension
  command: 'sudo -u postgres psql {{ pg_admin_username }} -c "CREATE EXTENSION IF NOT EXISTS adminpack;"'
  tags: postgresql

- name: Postgresql | copy SSL certificate
  copy: src=postgresql.crt dest=/etc/pki/tls/certs/postgresql.crt owner=root group=root mode=0755
  tags: postgresql

- name: Postgresql | copy private key
  copy: src=postgresql.key dest=/etc/pki/tls/private/postgresql.key owner=root group=root mode=0755
  tags: postgresql

- name: Postgresql | Copy config files hba
  template: src={{item}} dest=/etc/postgresql/9.3/main owner=postgres group=postgres backup=yes
  with_items:
    - pg_hba.conf.j2
    - postgresql.conf.j2
  tags: postgresql

- name: Postgresql | Open port 4321 but only from deploy server(s)
  ufw: rule=allow port=4321 proto=tcp src={{item}} state=reloaded
  with_items: deploy_servers
  tags: postgresql

- name: Postgresql | Start the service
  service: name=postgresql state=started enabled=true
  tags: postgresql


